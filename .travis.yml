language: c
os: linux
# we need more depth for git describe
git:
  depth: false
matrix:
  include:
    - name: "Visual Studio 2017 CMake (MSBuild)"
      os: windows
      env:
        - MSBUILD_PATH="c:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\MSBuild\15.0\Bin"
      script:
        - export PATH=$MSBUILD_PATH:$PATH
        - mkdir build
        - cd build
        - cmake -DENABLE_RTLSDR=OFF -G "Visual Studio 15 2017 Win64" ..
        - MSBuild.exe rtl433.sln
#    - name: "Visual Studio 2017 (MSBuild), disabled because it assumes RTLSDR"
#      os: windows
#      env:
#        - MSBUILD_PATH="c:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\MSBuild\15.0\Bin"
#      script:
#        - export PATH=$MSBUILD_PATH:$PATH
#        - cd vs15
#        - MSBuild.exe rtl_433.sln

    - name: "Precise default (GCC 4.6.3, CMake 2.8.7) and no libs"
      compiler: gcc
      env: RTLSDR=OFF
      dist: precise
      addons:
        apt:
          packages:
            - cmake
    - name: "Trusty default (GCC 4.8.2, CMake 2.8.12)"
      compiler: gcc
      dist: trusty
      addons:
        apt:
          packages:
            - libusb-1.0.0-dev
            - rtl-sdr
            - librtlsdr-dev
            - cmake
    - name: "Xenial default (GCC 5.4.0, CMake 3.5.1)"
      compiler: gcc
      dist: xenial
      addons:
        apt:
          packages:
            - libusb-1.0.0-dev
            - rtl-sdr
            - librtlsdr-dev
            - cmake

    - name: "Precise Clang (clang 3.4, CMake 2.8.7) and no libs"
      compiler: clang
      env: RTLSDR=OFF
      dist: precise
      addons:
        apt:
          packages:
            - cmake
    - name: "Trusty Clang (clang 5.0.0, CMake 2.8.12)"
      compiler: clang
      dist: trusty
      addons:
        apt:
          packages:
            - libusb-1.0.0-dev
            - rtl-sdr
            - librtlsdr-dev
            - cmake
    - name: "Xenial Clang (clang 7.0.0, CMake 3.5.1)"
      compiler: clang
      dist: xenial
      addons:
        apt:
          packages:
            - libusb-1.0.0-dev
            - rtl-sdr
            - librtlsdr-dev
            - cmake

    - name: "Precise or Trusty (GCC 6.5.0)"
      compiler: gcc-6
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - libusb-1.0.0-dev
            - rtl-sdr
            - librtlsdr-dev
            - cmake
    - name: "Precise or Trusty (GCC 7.4.0)"
      compiler: gcc-7
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - libusb-1.0.0-dev
            - rtl-sdr
            - librtlsdr-dev
            - cmake
    - name: "Precise or Trusty (GCC 8.1.0)"
      compiler: gcc-8
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-8
            - libusb-1.0.0-dev
            - rtl-sdr
            - librtlsdr-dev
            - cmake

    - name: "ARM64 Xenial default (GCC 5.4.0, CMake 3.5.1)"
      compiler: gcc
      arch: arm64
      dist: xenial
      addons:
        apt:
          packages:
            - libusb-1.0.0-dev
            - rtl-sdr
            - librtlsdr-dev
            - cmake
    - name: "ARM64 Xenial Clang (clang 7.0.0, CMake 3.5.1)"
      compiler: clang
      arch: arm64
      dist: xenial
      addons:
        apt:
          packages:
            - libusb-1.0.0-dev
            - rtl-sdr
            - librtlsdr-dev
            - cmake
    - name: "ARM32 Xenial default (GCC 5.4.0, CMake 3.5.1)"
      compiler: gcc
      arch: arm64
      dist: xenial
      env:
        - RTLSDR=OFF
        - CC=arm-linux-gnueabihf-gcc
        - SETARCH="setarch linux32 --verbose --32bit"
      addons:
        apt:
          packages:
            - crossbuild-essential-armhf
            - libc6-armhf-cross
            - cmake

    - name: "i686 Xenial default (GCC 5.4.0, CMake 3.5.1)"
      compiler: gcc
      dist: xenial
      env:
        - RTLSDR=OFF
        - CFLAGS="-m32"
        - SETARCH="setarch i686 --verbose --3gb"
      addons:
        apt:
          packages:
            - gcc-multilib
            - cmake

    - name: "Xenial default (gcc 5.4, cmake 3.12) RTL-SDR and SoapySDR"
      compiler: gcc
      env: SOAPYSDR=ON
      dist: xenial
      addons:
        apt:
          sources:
            - sourceline: 'ppa:myriadrf/drivers'
          packages:
            - libusb-1.0.0-dev
            - rtl-sdr
            - librtlsdr-dev
            - soapysdr
            - libsoapysdr-dev
            - cmake
    - name: "Xenial default (gcc 5.4, cmake 3.12) only SoapySDR"
      compiler: gcc
      env: RTLSDR=OFF SOAPYSDR=ON
      dist: xenial
      addons:
        apt:
          sources:
            - sourceline: 'ppa:myriadrf/drivers'
          packages:
            - soapysdr
            - libsoapysdr-dev
            - cmake
    - name: "CLang 3.8.0, CMake 2.8.12"
      compiler: clang-3.8
      dist: trusty
      addons:
        apt:
          sources:
            - llvm-toolchain-precise-3.8
            - ubuntu-toolchain-r-test
            - trusty
          packages:
            - clang-3.8
            - libusb-1.0.0-dev
            - rtl-sdr
            - librtlsdr-dev
            - cmake

    - name: "Deploy mingw 32 bit"
      compiler: i686-w64-mingw32-gcc
      env: RTLSDR=OFF CMAKE_TOOLCHAIN_FILE=cmake/Toolchain-gcc-mingw-w64-i686.cmake
      dist: trusty
      addons:
        apt:
          packages:
            - gcc-mingw-w64-base
            - binutils-mingw-w64-i686
            - gcc-mingw-w64-i686
            - mingw-w64-i686-dev
            - gcc-mingw-w64
            - gcc-multilib
    - name: "Deploy mingw 64 bit"
      compiler: x86_64-w64-mingw32-gcc
      env: RTLSDR=OFF CMAKE_TOOLCHAIN_FILE=cmake/Toolchain-gcc-mingw-w64-x86-64.cmake
      dist: trusty
      addons:
        apt:
          packages:
            - gcc-mingw-w64-base
            - binutils-mingw-w64-x86-64
            - gcc-mingw-w64-x86-64
            - mingw-w64-x86-64-dev
            - gcc-mingw-w64
            - p7zip
      before_deploy: ./do_sysroot.sh
      deploy:
        provider: releases
        file: "rtl_433-win-x32.zip" 
        #"build/bintray.json"
        user: "tarugueo"
        api_key:
          secure: "e9bnP6nTBOv7lQQWK5+VFxKJvxUq3BeKnFxCqWa83jdjlJB4pxebgNplgvgCqGFkWWvNvHwOxqNSzovGxvFyg6ui1Xf1kBlOl/x8AcTi4vob7qPA04j/s22oLBvs0h/lyCrh9BIwGfdiddc1HGMQU5Qv/HKzRY2HyRue/ajPpcFN2lzb5fRla+Puicr9RF1SNnQnMnKMZRbsVLCsd8cE9S58Dus/oNV9Kk1Ij03awBQi4t+oOpdkg3aT2md8RQVtqCyFpymsgQS42dWe3ICthRvyNqGHHsrzWWaTChoVZuMEOGSMDmsNtgLsUa7vjlmIGhzxUlDFmOVRWGaCpQyHSA5iS6ByvPbZAr6U3xPEId8nox/BvnR8wiuhx7bLZwVjBOPyBznMZ9HHu7EXiOMnzoo/w8fkbzOwdR2hGVag4nzw328ZWi/tfkB0RdjA/BpBLHndmXrJXBQYSf8KIEWDhLyW9UlmJEC+qn7A93LEiK0Wh7n66OMuEiI1jrsU/LmjprQ+DpfIdmA1394j2e9xWaYsl6XJSxhHLv0et0EDaKlcC73ssdRMc8kVTKb9kwaOSEXosR6UJisej6ytL3fu1Vo0q89h0rsmA/vMB28/r1R3WFEr8+l5guTfhGPjreyfOwL/XdlmfL675I5HxN7PQlT8boPLwqB7r0dIhKR0qqg="
        skip_cleanup: true # to upload artifacts created during the build
        on:
          tags: true
        #on:
        #  branch: master
        #  condition: "-n $BINTRAY_DEPLOY"

    - name: "Full test suite"
      language: python
      compiler: gcc
      env: RTLSDR=OFF RUN_RTL_433_TESTS=1
      dist: trusty
      python:
          - "2.7"
      install:
          - pip install deepdiff==3.3.0
      addons:
        apt:
          packages:
            - cmake
script:
  - ./do_build.sh
